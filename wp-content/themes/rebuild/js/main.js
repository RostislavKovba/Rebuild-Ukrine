$(document).ready((function(){if($(".animated_title").length>0&&$(".animated_title p").html((function(e,t){return"<span>"+$.trim(t).split("").join("</span><span>")+"</span>"})),$(".scrolling-path").length>0){let e,t,n=2;Array.prototype.forEach.call($(".scrolling-path"),s=>{$(".front-page").length>0&&(n=7),console.log(s,"child"),e=s,t=s.getTotalLength(),s.style.strokeDasharray=t,s.style.strokeDashoffset=t,window.addEventListener("scroll",(function(){var e=(document.body.scrollTop+document.documentElement.scrollTop)/(document.documentElement.scrollHeight-document.documentElement.clientHeight)*n,o=t*e;s.style.strokeDashoffset=t-o}))})}if($(".btn").length>0){const e=document.querySelectorAll(".btn, .swiper-button-prev, .swiper-button-next, .social svg");e.forEach(e=>{e.addEventListener("mousemove",(function(t){let n,s;e.classList.contains("btn-secondary")||e.classList.contains("btn-primary")?(n=t.screenX-e.getBoundingClientRect().left-(e.getBoundingClientRect().width/2-50),s=t.y-e.getBoundingClientRect().top-15.5):(n=t.screenX-e.getBoundingClientRect().left-15.5,s=t.y-e.getBoundingClientRect().top-15.5),e.style.setProperty("transform",`translate(${n}px, ${s}px)`),(e.classList.contains("swiper-button-prev")||e.classList.contains("swiper-button-next"))&&(e.classList.add("scale"),e.style.setProperty("--left-x",n-5.5+"px"),e.style.setProperty("--top-y",s-5.5+"px"))}))}),e.forEach(e=>{e.addEventListener("mouseout",(function(t){e.style.transform="translate(0px, 0px)",(e.classList.contains("swiper-button-prev")||e.classList.contains("swiper-button-next"))&&(e.classList.remove("scale"),e.style.setProperty("--left-x",-1*e.getBoundingClientRect().width+"px"),e.style.setProperty("--top-y",-1*e.getBoundingClientRect().width+"px"))}))})}const e=document.querySelector(".cursor");document.addEventListener("mousemove",(function(t){const n=t.clientX,s=t.clientY;e.style.left=n+"px",e.style.top=s+"px"})),$(".swiper-slide").length>0&&document.querySelectorAll(".swiper-slide").forEach(t=>{t.addEventListener("mousemove",(function(t){e.style.display="none"})),t.addEventListener("mouseleave",(function(t){e.style.display="block"}))}),$(".rating").length>0&&document.querySelectorAll(".rating").forEach(e=>{const t=e.querySelector(".group"),n=t.querySelectorAll("span")[1].innerHTML.replace(/[^0-9]/g,""),s=t.querySelectorAll("span")[0].innerHTML.replace(/[^0-9]/g,"")/n*100;e.querySelector(".line span").style=`width: ${s}%`}),$.getScript("https://cdnjs.cloudflare.com/ajax/libs/smoothscroll/1.4.9/SmoothScroll.js",(function(){SmoothScroll({keyboardSupport:!0,animationTime:1e3,stepSize:60})})),$("input, textarea").length>0&&document.querySelectorAll("input, textarea").forEach(e=>{e.addEventListener("focus",e=>{e.target.closest("fieldset").classList.add("focused")}),e.addEventListener("blur",e=>{0===e.target.value.length&&e.target.closest("fieldset").classList.remove("focused")})}),$(".burger").on("click",(function(){$(this).toggleClass("opened"),$("header").toggleClass("opened")})),window.addEventListener("scroll",(function(e){if(document.querySelectorAll(".scroll-y").length>0){const e=document.querySelectorAll(".scroll-y");for(let t=0;t<e.length;t++)!e[t].classList.contains("enter")&&e[t].getBoundingClientRect().top-window.innerHeight<80&&e[t].getBoundingClientRect().bottom>80?e[t].classList.add("enter"):e[t].classList.contains("enter")&&!e[t].classList.contains("once")&&(e[t].getBoundingClientRect().top-window.innerHeight>80&&e[t].getBoundingClientRect().bottom>80||e[t].getBoundingClientRect().top-window.innerHeight<80&&e[t].getBoundingClientRect().bottom<80)&&e[t].classList.remove("enter")}let t=$(this),n=$("header");t.scrollTop()>120?n.addClass("header_bg"):n.removeClass("header_bg");let s,o=document.documentElement,i=window,l=i.scrollY||o.scrollTop,r=0,c=0,a=document.querySelector("header"),d=function(e,t){2===e&&t>52?(a.classList.add("hide"),c=e):1===e&&(a.classList.remove("hide"),c=e)};window.addEventListener("scroll",(function(){s=i.scrollY||o.scrollTop,s>l?r=2:s<l&&(r=1),r!==c&&d(r,s),l=s}))})),$(".faq .faq_item").on("click",(function(){$(this).toggleClass("opened")})),$(".btn-extra").on("click",(function(){$(this).toggleClass("opened")})),$(".faq_item").length>0&&document.querySelectorAll(".faq_item").forEach(e=>{e.querySelector(".faq_content_cover").style.setProperty("--el-height",e.querySelector(".faq_content").getBoundingClientRect().height+"px")}),$(".request_item .btn-extra").on("click",(function(){$(this).parentsUntil(".request_item").next().toggleClass("opened")})),$(".request_item .bottom .btn-extra").on("click",(function(){$(this).parentsUntil(".boootm").removeClass("opened"),$(this).parentsUntil(".request_item").parent().find(".btn-extra").removeClass("opened")})),$(".request_item").length>0&&document.querySelectorAll(".request_item").forEach(e=>{e.querySelector(".bottom").style.setProperty("--el-height",e.querySelector(".bottom .cover").getBoundingClientRect().height+"px")}),$(".swiper").length>0&&$.getScript("https://cdnjs.cloudflare.com/ajax/libs/Swiper/7.3.0/swiper-bundle.js",(function(){$(".swiper").each((function(){let e=$(this),t=e.find(".swiper-container");e.hasClass("article-slider")&&(swipes=new Swiper(t.prevObject[0],{speed:1500,slidesPerView:1,spaceBetween:20,autoHeight:!0,loop:!0,effect:"fade",fadeEffect:{crossFade:!0},autoplay:{delay:5e3},navigation:{nextEl:$(".article-slider_btns").find(".swiper-button-next")[0],prevEl:$(".article-slider_btns").find(".swiper-button-prev")[0]},pagination:{el:$(this).find(".swiper-pagination")[0]}})),e.hasClass("slider-blog")&&(swipes=new Swiper(t.prevObject[0],{speed:1500,slidesPerView:5,spaceBetween:30,centeredSlides:!0,loop:!0,navigation:{nextEl:$(".slider-blog_btns").find(".swiper-button-next")[0],prevEl:$(".slider-blog_btns").find(".swiper-button-prev")[0]},breakpoints:{0:{slidesPerView:1},550:{slidesPerView:2},850:{slidesPerView:3},1240:{slidesPerView:4,centeredSlides:!1},1380:{slidesPerView:5}}}),window.innerWidth<768&&swipes.destroy())}))})),$(".insert_section").length>0&&$.getScript("https://cdnjs.cloudflare.com/ajax/libs/waypoints/4.0.1/jquery.waypoints.js",(function(){$.getScript("https://cdnjs.cloudflare.com/ajax/libs/Counter-Up/1.0.0/jquery.counterup.min.js",(function(){$(".insert_section span").counterUp({delay:20,time:2e3})}))}))}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
