jQuery((function(e){e(document).ready((function(){if(e(".animated_title").length>0&&e(".animated_title p").html((function(t,n){return"<span>"+e.trim(n).split("").join("</span><span>")+"</span>"})),e(".scrolling-path").length>0){let t,n,s=2;Array.prototype.forEach.call(e(".scrolling-path"),o=>{e(".front-page").length>0&&(s=7),t=o,n=o.getTotalLength(),o.style.strokeDasharray=n,o.style.strokeDashoffset=n,window.addEventListener("scroll",(function(){var e=(document.body.scrollTop+document.documentElement.scrollTop)/(document.documentElement.scrollHeight-document.documentElement.clientHeight)*s,t=n*e;o.style.strokeDashoffset=n-t}))})}if(e(".btn").length>0){const e=document.querySelectorAll(".btn, .swiper-button-prev, .swiper-button-next, .social svg");e.forEach(e=>{let t=0,n=0,s=0;e.addEventListener("mousemove",(function(o){s=e.classList.contains("btn-secondary")||e.classList.contains("btn-primary")?.3:.7,t=(o.screenX-(e.getBoundingClientRect().left+e.getBoundingClientRect().width/2))*s,n=(o.y-(e.getBoundingClientRect().top+e.getBoundingClientRect().height/2))*s,e.style.setProperty("transform",`translate(${t}px, ${n}px)`),(e.classList.contains("swiper-button-prev")||e.classList.contains("swiper-button-next"))&&(e.classList.add("scale"),e.style.setProperty("--left-x",t-5.5+"px"),e.style.setProperty("--top-y",n-5.5+"px")),(e.classList.contains("btn-secondary")||e.classList.contains("btn-primary"))&&(e.classList.add("scale"),e.style.setProperty("--left-x",t-5.5+"px"),e.style.setProperty("--top-y",n-5.5+"px"))}))}),e.forEach(e=>{e.addEventListener("mouseout",(function(t){e.style.transform="translate(0px, 0px)",e.classList.remove("scale"),e.style.setProperty("--left-x",-1*e.getBoundingClientRect().width+"px"),e.style.setProperty("--top-y",-1*e.getBoundingClientRect().width+"px")}))})}const t=document.querySelector(".cursor");document.addEventListener("mousemove",(function(e){const n=e.clientX,s=e.clientY;t.style.left=n+"px",t.style.top=s+"px"})),e(".swiper-slide").length>0&&document.querySelectorAll(".swiper-slide").forEach(e=>{e.addEventListener("mousemove",(function(e){t.style.display="none"})),e.addEventListener("mouseleave",(function(e){t.style.display="block"}))}),e(".rating").length>0&&document.querySelectorAll(".rating").forEach(e=>{const t=e.querySelector(".group"),n=t.querySelectorAll("span")[1].innerHTML.replace(/[^0-9]/g,""),s=t.querySelectorAll("span")[0].innerHTML.replace(/[^0-9]/g,"")/n*100;e.querySelector(".line span").style=`width: ${s}%`}),e.getScript("https://cdnjs.cloudflare.com/ajax/libs/smoothscroll/1.4.9/SmoothScroll.js",(function(){SmoothScroll({keyboardSupport:!0,animationTime:1e3,stepSize:60})})),e("input, textarea").length>0&&document.querySelectorAll("input, textarea").forEach(e=>{e.addEventListener("focus",e=>{e.target.closest("fieldset").classList.add("focused")}),e.addEventListener("blur",e=>{0===e.target.value.length&&e.target.closest("fieldset").classList.remove("focused")})}),e(".burger").on("click",(function(){e(this).toggleClass("opened"),e("header").toggleClass("opened")})),window.addEventListener("scroll",(function(t){if(document.querySelectorAll(".scroll-y").length>0){const e=document.querySelectorAll(".scroll-y");for(let t=0;t<e.length;t++)!e[t].classList.contains("enter")&&e[t].getBoundingClientRect().top-window.innerHeight<80&&e[t].getBoundingClientRect().bottom>80?e[t].classList.add("enter"):e[t].classList.contains("enter")&&!e[t].classList.contains("once")&&(e[t].getBoundingClientRect().top-window.innerHeight>80&&e[t].getBoundingClientRect().bottom>80||e[t].getBoundingClientRect().top-window.innerHeight<80&&e[t].getBoundingClientRect().bottom<80)&&e[t].classList.remove("enter")}let n=e(this),s=e("header");n.scrollTop()>120?s.addClass("header_bg"):s.removeClass("header_bg");let o,i=document.documentElement,l=window,r=l.scrollY||i.scrollTop,c=0,a=0,d=document.querySelector("header"),p=function(e,t){2===e&&t>52?(d.classList.add("hide"),a=e):1===e&&(d.classList.remove("hide"),a=e)};window.addEventListener("scroll",(function(){o=l.scrollY||i.scrollTop,o>r?c=2:o<r&&(c=1),c!==a&&p(c,o),r=o}))})),e(".faq .faq_item").on("click",(function(){e(this).toggleClass("opened")})),e(".btn-extra").on("click",(function(){e(this).toggleClass("opened")})),e(".faq_item").length>0&&document.querySelectorAll(".faq_item").forEach(e=>{e.querySelector(".faq_content_cover").style.setProperty("--el-height",e.querySelector(".faq_content").getBoundingClientRect().height+"px")}),e(".request_item .btn-extra").on("click",(function(){e(this).parentsUntil(".request_item").next().toggleClass("opened")})),e(".request_item .bottom .btn-extra").on("click",(function(){e(this).parentsUntil(".boootm").removeClass("opened"),e(this).parentsUntil(".request_item").parent().find(".btn-extra").removeClass("opened")})),e(".request_item").length>0&&document.querySelectorAll(".request_item").forEach(e=>{e.querySelector(".bottom").style.setProperty("--el-height",e.querySelector(".bottom .cover").getBoundingClientRect().height+"px")}),e(".swiper").length>0&&e.getScript("https://cdnjs.cloudflare.com/ajax/libs/Swiper/7.3.0/swiper-bundle.js",(function(){e(".swiper").each((function(){let t=e(this),n=t.find(".swiper-container");t.hasClass("article-slider")&&(swipes=new Swiper(n.prevObject[0],{speed:1500,slidesPerView:1,spaceBetween:20,autoHeight:!0,loop:!0,effect:"fade",fadeEffect:{crossFade:!0},autoplay:{delay:5e3},navigation:{nextEl:e(".article-slider_btns").find(".swiper-button-next")[0],prevEl:e(".article-slider_btns").find(".swiper-button-prev")[0]},pagination:{el:e(this).find(".swiper-pagination")[0]}})),t.hasClass("slider-blog")&&(swipes=new Swiper(n.prevObject[0],{speed:1500,slidesPerView:5,spaceBetween:30,centeredSlides:!0,loop:!0,navigation:{nextEl:e(".slider-blog_btns").find(".swiper-button-next")[0],prevEl:e(".slider-blog_btns").find(".swiper-button-prev")[0]},breakpoints:{0:{slidesPerView:1},550:{slidesPerView:2},850:{slidesPerView:3},1240:{slidesPerView:4,centeredSlides:!1},1380:{slidesPerView:5}}}),window.innerWidth<768&&swipes.destroy())}))})),e(".insert_section").length>0&&e.getScript("https://cdnjs.cloudflare.com/ajax/libs/waypoints/4.0.1/jquery.waypoints.js",(function(){e.getScript("https://cdnjs.cloudflare.com/ajax/libs/Counter-Up/1.0.0/jquery.counterup.min.js",(function(){e(".insert_section span").counterUp({delay:20,time:2e3})}))}))}))}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
